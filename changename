#!/usr/bin/env python3

import os
import argparse

class SameNameError(Exception):
    """Custom exception for existing target name."""
    pass

def main():
    """Main function to handle the renaming logic and exceptions."""
    try:
        args = parse_arguments()
        rename_file_or_directory(args.current_name, args.new_name)
    except FileNotFoundError:
        print(f"Error: No such file or directory: {args.current_name}")
    except SameNameError as error:
        print(error)
    except Exception as error:
        print(f"Unexpected error: {error}")

def parse_arguments():
    """Parse command line arguments."""
    parser = argparse.ArgumentParser(
        prog='changename',
        description='Utility command to change name of file and directory')
    parser.add_argument('current_name', help='Current name of file or directory')
    parser.add_argument('new_name', help='New name of file or directory')
    return parser.parse_args()

def rename_file_or_directory(current_name, new_name):
    """Rename file or directory after validating the new name does not exist."""
    if not os.path.exists(current_name):
        raise FileNotFoundError(current_name)
    
    newname_with_path = set_newname_with_path(current_name, new_name)
    validate_if_newname_exists(newname_with_path)
    os.rename(current_name, newname_with_path)

def set_newname_with_path(current_name, new_name):
    """Construct new path with the new name."""
    path_of_current_name = os.path.split(current_name)[0]
    newname_with_path = os.path.join(path_of_current_name, new_name)
    return newname_with_path

def validate_if_newname_exists(new_name):
    """Check if the new name already exists and raise an exception if it does."""
    if os.path.exists(new_name):
        raise SameNameError(f"Error: Name '{new_name}' already exists")

if __name__ == "__main__":
    main()
